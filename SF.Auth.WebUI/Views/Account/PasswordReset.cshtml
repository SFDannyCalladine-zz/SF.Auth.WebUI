@using SF.Common.MVC
@model SF.Auth.WebUI.Models.Account.PasswordResetViewModel
<div class="row">
    <div class="col-md-6 col-md-offset-3" style="top: 125px;">
        <div class="panel panel-login">
            <div class="panel-heading">
                <img id="login-logo" src="~/images/storefeeder-logo.svg" alt="StoreFeeder • Multi Channels • One Solution" />
            </div>
            <div class="panel-body">
                @using (Html.BeginForm("passwordreset", "login", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(x => x.Key)
                    @Html.HiddenFor(x => x.UserGuid)
                    <div class="form-group @Html.IsValid(x => x.NewPassword, "has-error")">
                        <div class="col-md-8 col-md-offset-2">
                            @Html.PasswordFor(x => x.NewPassword, new { @class = "form-control", placeholder="New Password" })
                            @Html.ValidationMessageFor(x => x.NewPassword, string.Empty, new { @class = "help-block" })
                        </div>
                    </div>
                    <div class="form-group @Html.IsValid(x => x.ConfirmNewPassword, "has-error")">
                        <div class="col-md-8 col-md-offset-2">
                            @Html.PasswordFor(x => x.ConfirmNewPassword, new { @class = "form-control", placeholder="Confirm New Password" })
                            @Html.ValidationMessageFor(x => x.ConfirmNewPassword, string.Empty, new { @class = "help-block" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-8 col-md-offset-2">
                            <button class="btn btn-primary pull-right" id="submit" type="submit">Submit&nbsp;<i class="fa fa-arrow-right"></i></button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}